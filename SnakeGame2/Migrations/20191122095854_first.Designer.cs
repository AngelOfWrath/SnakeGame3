// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SnakeGame2.Data;

namespace SnakeGame2.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20191122095854_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1");

            modelBuilder.Entity("SnakeGame2.Models.Accounts.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<long>("User_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("SnakeGame2.Models.Matches.Match", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("SnakeGame2.Models.Mathes_stats.Match_stats", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Match_Id")
                        .HasColumnType("INTEGER");

                    b.Property<long>("User_Id")
                        .HasColumnType("INTEGER");

                    b.Property<float>("value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Match_stats");
                });

            modelBuilder.Entity("SnakeGame2.Models.Records.Stats", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Match_Id")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Stat_Id")
                        .HasColumnType("INTEGER");

                    b.Property<long>("User_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("SnakeGame2.Models.Stat_types.Stat_type", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Stat_Name")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Stat_types");
                });

            modelBuilder.Entity("SnakeGame2.Models.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Account_Id")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MatchId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("User_Nickname")
                        .HasColumnType("INTEGER");

                    b.Property<long>("User_Type_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SnakeGame2.Models.Users.User", b =>
                {
                    b.HasOne("SnakeGame2.Models.Matches.Match", null)
                        .WithMany("Players")
                        .HasForeignKey("MatchId");
                });
#pragma warning restore 612, 618
        }
    }
}
